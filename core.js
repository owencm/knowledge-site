// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  jQuery(function() {
    var ListView, Question, QuestionList, list_view;
    Question = (function(_super) {

      __extends(Question, _super);

      function Question() {
        return Question.__super__.constructor.apply(this, arguments);
      }

      Question.prototype.defaults = {
        question: 'Question',
        answer: 'Answer'
      };

      return Question;

    })(Backbone.Model);
    QuestionList = (function(_super) {

      __extends(QuestionList, _super);

      function QuestionList() {
        return QuestionList.__super__.constructor.apply(this, arguments);
      }

      QuestionList.prototype.model = Question;

      return QuestionList;

    })(Backbone.Collection);
    ListView = (function(_super) {

      __extends(ListView, _super);

      function ListView() {
        return ListView.__super__.constructor.apply(this, arguments);
      }

      ListView.prototype.el = $('body');

      ListView.prototype.initialize = function() {
        _.bindAll(this);
        this.collection = new QuestionList;
        this.collection.bind('add', this.appendQuestion);
        return this.render();
      };

      ListView.prototype.render = function() {
        $(this.el).append('<input type="text" id="question"></input><input type="text" id="answer"></input>');
        $(this.el).append('<button>Add question</button>');
        return $(this.el).append('<ul></ul>');
      };

      ListView.prototype.addQuestion = function() {
        var question;
        question = new Question;
        question.set({
          question: $('#question').val(),
          answer: $('#answer').val()
        });
        return this.collection.add(question);
      };

      ListView.prototype.appendQuestion = function(question) {
        return $('ul').append("<li>" + (question.get('question')) + "? " + (question.get('answer')));
      };

      ListView.prototype.events = {
        'click button': 'addQuestion'
      };

      return ListView;

    })(Backbone.View);
    return list_view = new ListView;
  });

}).call(this);
